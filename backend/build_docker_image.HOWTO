
###### Build image and Run container

```
docker build -t [REPOSITORY:[TAG]] .
docker run --name [container_name] --publish [IP_ADDRESS]:[PORT]:5000 [REPOSITORY:[TAG]]
```

##### Commands for inserting a campaign in the application

In case the user wants to insert a campaign in the container, the following commands must be executed:

- First the user needs to know the container id

```
docker container ls
```

- Second the user execute the command to copy the file to container

```
docker cp [source_path_filename]  [container_id]:/app/framework/campaigns
```

- Must restart the container to apply modifications

In case the user wants to update the image with the inserted files:

- User needs to know the repository and tag from the image

```
docker images
```

- Then the user must execute the following command

```
docker commit [container_id] [REPOSITORY:[TAG]]
```

###### Example

```
docker container ls
```

Output:

```
CONTAINER ID   IMAGE               COMMAND                 CREATED          STATUS          PORTS                    NAMES
5913bd8fa292   ucxception:latest   "python3 call_api.py"   16 minutes ago   Up 16 minutes   0.0.0.0:5000->5000/tcp   teste
```

```
docker cp /ucXception-dev/framework/campaigns/campaign_test.py  5913bd8fa292:/app/framework/campaigns
docker cp /ucXception-dev/framework/campaigns/campaign_test.json  5913bd8fa292:/app/framework/campaigns
```

```
docker images
```

```
REPOSITORY     TAG       IMAGE ID       CREATED              SIZE
ucxception     latest    6fb7c0cc313a   16 hours ago         743MB
```

```
docker commit 407f341743f2 ucxception:latest
```
